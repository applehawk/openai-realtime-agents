/**
 * RAG Health Check Middleware
 * 
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ RAG —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è RAG_HEALTH_CHECK_ENABLED=false
 */

import { ragHealthChecker } from '@/app/lib/ragHealthChecker';

let healthCheckCompleted = false;
let healthCheckPromise: Promise<any> | null = null;

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è RAG —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
 */
export async function performStartupHealthCheck(): Promise<void> {
  // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º
  if (healthCheckCompleted) {
    return;
  }

  // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∂–¥–µ–º –µ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  if (healthCheckPromise) {
    await healthCheckPromise;
    return;
  }

  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
  healthCheckPromise = (async () => {
    try {
      console.log('üöÄ Performing RAG server health check on startup...');
      ragHealthChecker.logConfiguration();
      
      const status = await ragHealthChecker.checkHealth();
      
      const allAccessible = status.api.accessible && status.mcp.accessible;
      
      if (allAccessible) {
        console.log('‚úÖ RAG servers are ready for use');
      } else {
        console.log('‚ö†Ô∏è  RAG servers have issues, but application will continue');
        console.log('üí° You can disable this check by setting RAG_HEALTH_CHECK_ENABLED=false');
      }
      
      healthCheckCompleted = true;
    } catch (error: any) {
      console.error('üí• Startup RAG health check failed:', error.message);
      console.log('‚ö†Ô∏è  Application will continue, but RAG features may not work properly');
      healthCheckCompleted = true;
    }
  })();

  await healthCheckPromise;
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
 */
export function getHealthCheckStatus(): { completed: boolean; inProgress: boolean } {
  return {
    completed: healthCheckCompleted,
    inProgress: healthCheckPromise !== null && !healthCheckCompleted,
  };
}

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
 */
export async function forceHealthCheck(): Promise<any> {
  console.log('üîÑ Forcing RAG health check...');
  return await ragHealthChecker.checkHealth();
}
