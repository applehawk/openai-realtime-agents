/**
 * –¢–µ—Å—Ç –º–∞–ø–ø–∏–Ω–≥–∞ –ø–æ–ª–µ–π –¥–ª—è MCP –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
 */

const FIELD_MAPPING = {
  '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏': 'competencies',
  '—Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è': 'communication_style', 
  '–ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –≤—Å—Ç—Ä–µ—á–∞–º': 'meeting_preferences',
  '—Ñ–æ–∫—É—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞': 'focused_work',
  '—Å—Ç–∏–ª—å —Ä–∞–±–æ—Ç—ã': 'work_style',
  '–∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏': 'career_goals',
  '–ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ—à–µ–Ω–∏—é': 'problem_solving_approach',
};

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é
const testInterviewData = {
  '–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏': '–ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç',
  '—Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è': '–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ',
  '–ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –≤—Å—Ç—Ä–µ—á–∞–º': '—É—Ç—Ä–æ–º, –∫–æ—Ä–æ—Ç–∫–∏–µ –≤—Å—Ç—Ä–µ—á–∏',
  '—Ñ–æ–∫—É—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞': '–∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 2 –¥–æ 5',
  '—Å—Ç–∏–ª—å —Ä–∞–±–æ—Ç—ã': '–Ω–∞–¥ 1',
  '–∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏': '—Ä–æ—Å—Ç –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π',
  '–ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ—à–µ–Ω–∏—é': '–æ–±—Å—É–¥–∏—Ç—å',
};

console.log('üß™ –¢–µ—Å—Ç –º–∞–ø–ø–∏–Ω–≥–∞ –ø–æ–ª–µ–π MCP –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π\n');

console.log('üìã –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤—å—é:');
Object.entries(testInterviewData).forEach(([ru, value]) => {
  console.log(`  ${ru}: ${value}`);
});

console.log('\nüîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –ø–æ–ª—è:');
const englishData = {};
Object.entries(testInterviewData).forEach(([ru, value]) => {
  const en = FIELD_MAPPING[ru];
  if (en) {
    englishData[en] = value;
    console.log(`  ${ru} ‚Üí ${en}: ${value}`);
  } else {
    console.log(`  ‚ùå –ü–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${ru}`);
  }
});

console.log('\nüì§ –ò—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è MCP API:');
console.log(JSON.stringify(englishData, null, 2));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
const requiredFields = Object.values(FIELD_MAPPING);
const presentFields = Object.keys(englishData);
const missingFields = requiredFields.filter(field => !presentFields.includes(field));

console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã:');
console.log(`  –í—Å–µ–≥–æ –ø–æ–ª–µ–π: ${requiredFields.length}`);
console.log(`  –ó–∞–ø–æ–ª–Ω–µ–Ω–æ: ${presentFields.length}`);
console.log(`  –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${missingFields.length}`);

if (missingFields.length > 0) {
  console.log('  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è:', missingFields);
} else {
  console.log('  ‚úÖ –í—Å–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
}
